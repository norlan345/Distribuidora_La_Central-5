@page "/TrasladoDTO"
@inject HttpClient Http
@inject IJSRuntime JS
@using Distribuidora_La_Central.Shared.Models
@using System.ComponentModel.DataAnnotations

<style>
    :root {
        --primary-blue: #1a4b8c;
        --secondary-blue: #2a6fd6;
        --light-blue: #e6f0fa;
        --accent-orange: #ff6b35;
        --success-green: #28a745;
        --warning-yellow: #ffc107;
        --dark-gray: #343a40;
        --light-gray: #f8f9fa;
    }

    .card-header-custom {
        background: linear-gradient(135deg, var(--primary-blue) 0%, var(--secondary-blue) 100%);
        color: white;
        border-radius: 0.35rem 0.35rem 0 0 !important;
    }

    .btn-primary-custom {
        background: var(--secondary-blue);
        border: none;
        color: white;
        transition: all 0.3s;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    }

        .btn-primary-custom:hover {
            background: var(--primary-blue);
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.15);
        }

    .table-custom {
        border-radius: 0.35rem;
        overflow: hidden;
        box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.1);
    }

        .table-custom thead {
            background: linear-gradient(135deg, var(--primary-blue) 0%, var(--secondary-blue) 100%);
            color: white;
        }

        .table-custom tbody tr:hover {
            background-color: var(--light-blue);
        }

    .status-badge {
        padding: 0.35em 0.65em;
        border-radius: 50rem;
        font-weight: 600;
    }

    .status-pendiente {
        background-color: var(--warning-yellow);
        color: var(--dark-gray);
    }

    .status-completado {
        background-color: var(--success-green);
        color: white;
    }

    .form-control-custom {
        border: 1px solid #ced4da;
        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
    }

        .form-control-custom:focus {
            border-color: var(--secondary-blue);
            box-shadow: 0 0 0 0.2rem rgba(42, 111, 214, 0.25);
        }

    .validation-message {
        color: #dc3545;
        font-size: 0.875em;
    }

    .loading-container {
        min-height: 200px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .spinner-custom {
        color: var(--secondary-blue);
        width: 3rem;
        height: 3rem;
    }
</style>

<div class="container-fluid px-4 mt-4">
    <div class="card border-0 shadow-lg">
        <div class="card-header card-header-custom py-3">
            <div class="d-flex justify-content-between align-items-center">
                <h3 class="m-0 font-weight-bold">
                    <i class="fas fa-truck-moving mr-2"></i>Gestión de Traslados
                </h3>
                <span class="badge badge-light">v2.0</span>
            </div>
        </div>

        <div class="card-body bg-white">
            <!-- Formulario -->
            <div class="row mb-5">
                <div class="col-lg-8 mx-auto">
                    <div class="card border-0 shadow-sm">
                        <div class="card-header card-header-custom py-2">
                            <h6 class="m-0 font-weight-bold">
                                <i class="fas fa-plus-circle mr-2"></i>Registrar Nuevo Traslado
                            </h6>
                        </div>
                        <div class="card-body bg-white">
                            <EditForm Model="@nuevoTraslado" OnValidSubmit="@RegistrarTraslado">
                                <DataAnnotationsValidator />
                                <ValidationSummary class="alert alert-danger" />

                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group mb-4">
                                            <label class="font-weight-bold text-dark">
                                                <i class="fas fa-barcode mr-2"></i>Código Producto
                                            </label>
                                            <InputNumber class="form-control form-control-custom" @bind-Value="nuevoTraslado.codigoProducto" />
                                            <ValidationMessage For="@(() => nuevoTraslado.codigoProducto)" class="validation-message" />
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group mb-4">
                                            <label class="font-weight-bold text-dark">
                                                <i class="fas fa-boxes mr-2"></i>Cantidad
                                            </label>
                                            <InputNumber class="form-control form-control-custom" @bind-Value="nuevoTraslado.cantidad" />
                                            <ValidationMessage For="@(() => nuevoTraslado.cantidad)" class="validation-message" />
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group mb-4">
                                            <label class="font-weight-bold text-dark">
                                                <i class="fas fa-warehouse mr-2"></i>Bodega Origen
                                            </label>
                                            <InputNumber class="form-control form-control-custom" @bind-Value="nuevoTraslado.idBodegaOrigen" />
                                            <ValidationMessage For="@(() => nuevoTraslado.idBodegaOrigen)" class="validation-message" />
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group mb-4">
                                            <label class="font-weight-bold text-dark">
                                                <i class="fas fa-warehouse mr-2"></i>Bodega Destino
                                            </label>
                                            <InputNumber class="form-control form-control-custom" @bind-Value="nuevoTraslado.idBodegaDestino" />
                                            <ValidationMessage For="@(() => nuevoTraslado.idBodegaDestino)" class="validation-message" />
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group mb-4">
                                            <label class="font-weight-bold text-dark">
                                                <i class="fas fa-calendar-alt mr-2"></i>Fecha Traslado
                                            </label>
                                            <InputDate class="form-control form-control-custom" @bind-Value="nuevoTraslado.fechaTraslado" />
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group mb-4">
                                            <label class="font-weight-bold text-dark">
                                                <i class="fas fa-user mr-2"></i>Realizado Por (ID)
                                            </label>
                                            <InputNumber class="form-control form-control-custom" @bind-Value="nuevoTraslado.realizadoPor" />
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group mb-4">
                                    <label class="font-weight-bold text-dark">
                                        <i class="fas fa-info-circle mr-2"></i>Estado
                                    </label>
                                    <InputSelect class="form-control form-control-custom" @bind-Value="nuevoTraslado.estado">
                                        <option value="Pendiente">Pendiente</option>
                                        <option value="En progreso">En progreso</option>
                                        <option value="Completado">Completado</option>
                                        <option value="Cancelado">Cancelado</option>
                                    </InputSelect>
                                </div>

                                <div class="d-flex justify-content-between mt-4">
                                    <button type="button" class="btn btn-outline-secondary" @onclick="() => nuevoTraslado = new TrasladoDto()">
                                        <i class="fas fa-eraser mr-2"></i>Limpiar
                                    </button>
                                    <button type="submit" class="btn btn-primary-custom px-4">
                                        <i class="fas fa-save mr-2"></i>Registrar Traslado
                                    </button>
                                </div>
                            </EditForm>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Lista de traslados -->
            <div class="card border-0 shadow-sm mt-5">
                <div class="card-header card-header-custom py-2">
                    <div class="d-flex justify-content-between align-items-center">
                        <h6 class="m-0 font-weight-bold">
                            <i class="fas fa-history mr-2"></i>Historial de Traslados
                        </h6>
                        <button class="btn btn-sm btn-light" @onclick="CargarTraslados">
                            <i class="fas fa-sync-alt mr-1"></i>Actualizar
                        </button>
                    </div>
                </div>
                <div class="card-body bg-white p-0">
                    @if (traslados == null)
                    {
                        <div class="loading-container">
                            <div class="text-center">
                                <div class="spinner-border spinner-custom" role="status">
                                    <span class="sr-only">Cargando...</span>
                                </div>
                                <p class="mt-3 text-muted">Cargando historial de traslados...</p>
                            </div>
                        </div>
                    }
                    else if (!traslados.Any())
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-box-open fa-3x text-muted mb-3"></i>
                            <h5 class="text-muted">No hay traslados registrados</h5>
                            <p class="text-muted">Comience registrando un nuevo traslado</p>
                        </div>
                    }
                    else
                    {
                        <div class="table-responsive">
                            <table class="table table-custom table-hover mb-0">
                                <thead>
                                    <tr>
                                        <th>ID</th>
                                        <th>Producto</th>
                                        <th>Origen</th>
                                        <th>Destino</th>
                                        <th>Cantidad</th>
                                        <th>Fecha</th>
                                        <th>Usuario</th>
                                        <th>Estado</th>
                                        <th>Acciones</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var t in traslados)
                                    {
                                        <tr>
                                            <td class="font-weight-bold">#@t.idTraslado</td>
                                            <td>@t.codigoProducto</td>
                                            <td>Bodega @t.idBodegaOrigen</td>
                                            <td>Bodega @t.idBodegaDestino</td>
                                            <td>@t.cantidad</td>
                                            <td>@t.fechaTraslado?.ToString("dd/MM/yyyy")</td>
                                            <td>@t.realizadoPor</td>
                                            <td>
                                                <span class="status-badge @GetStatusClass(t.estado)">
                                                    @t.estado
                                                </span>
                                            </td>
                                            <td>
                                                <button class="btn btn-sm btn-outline-primary">
                                                    <i class="fas fa-eye"></i>
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                </div>
                <div class="card-footer bg-white border-top-0">
                    <div class="d-flex justify-content-between align-items-center">
                        <span class="text-muted small">Mostrando @traslados?.Count registros</span>
                        <nav aria-label="Page navigation">
                            <ul class="pagination pagination-sm mb-0">
                                <li class="page-item disabled">
                                    <a class="page-link" href="#" tabindex="-1">Anterior</a>
                                </li>
                                <li class="page-item active"><a class="page-link" href="#">1</a></li>
                                <li class="page-item"><a class="page-link" href="#">2</a></li>
                                <li class="page-item"><a class="page-link" href="#">3</a></li>
                                <li class="page-item">
                                    <a class="page-link" href="#">Siguiente</a>
                                </li>
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    // [Mantener todo el código original sin cambios]
    List<TrasladoDto> traslados = new();
    TrasladoDto nuevoTraslado = new TrasladoDto
        {
            fechaTraslado = DateTime.Now,
            estado = "Pendiente"
        };

    private string GetStatusClass(string estado)
    {
        return estado switch
        {
            "Completado" => "status-completado",
            "Cancelado" => "bg-danger text-white",
            "En progreso" => "bg-info text-white",
            _ => "status-pendiente"
        };
    }

    protected override async Task OnInitializedAsync()
    {
        await CargarTraslados();
    }

    private async Task CargarTraslados()
    {
        try
        {
            traslados = await Http.GetFromJsonAsync<List<TrasladoDto>>("api/Traslado/GetTodosLosTraslados");
        }
        catch (Exception ex)
        {
            await JS.InvokeVoidAsync("alert", $"Error cargando traslados: {ex.Message}");
        }
    }

    private async Task RegistrarTraslado()
    {
        try
        {
            var response = await Http.PostAsJsonAsync("api/Traslado/PostTraslado", nuevoTraslado);

            if (response.IsSuccessStatusCode)
            {
                await JS.InvokeVoidAsync("alert", "Traslado registrado correctamente");
                nuevoTraslado = new TrasladoDto();
                await CargarTraslados();
            }
            else
            {
                var errorContent = await response.Content.ReadAsStringAsync();
                await JS.InvokeVoidAsync("alert", $"Error: {response.StatusCode} - {errorContent}");
            }
        }
        catch (Exception ex)
        {
            await JS.InvokeVoidAsync("alert", $"Error registrando traslado: {ex.Message}");
        }
    }

    public class Response
    {
        public int StatusCode { get; set; }
        public string ErrorMessage { get; set; }
    }

    public class TrasladoDto
    {
        public int idTraslado { get; set; }

        [Required(ErrorMessage = "El código de producto es requerido")]
        public int codigoProducto { get; set; }

        [Required(ErrorMessage = "La bodega de origen es requerida")]
        public int idBodegaOrigen { get; set; }

        [Required(ErrorMessage = "La bodega de destino es requerida")]
        public int idBodegaDestino { get; set; }

        [Required(ErrorMessage = "La cantidad es requerida")]
        [Range(1, int.MaxValue, ErrorMessage = "La cantidad debe ser mayor a 0")]
        public int cantidad { get; set; }

        public DateTime? fechaTraslado { get; set; }

        [Required(ErrorMessage = "El ID del usuario es requerido")]
        public int realizadoPor { get; set; }

        public string estado { get; set; }
    }
}